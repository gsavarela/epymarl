# --- GCN specific parameters ---
hidden_dim: 64 # Size of hidden state for default rnn agent
lr: 0.0003 # LBF: Learning rate for agents
use_rnn: True # LBF: GRU
standardise_rewards: True
epsilon_anneal_time: 50_000
evaluation_epsilon: 0.05
# update the target network every {} episodes
target_update_interval_or_tau: 200 # LBF: Refresh target
q_nstep: 5

# use epsilon greedy action selector
action_selector: "epsilon_greedy"
epsilon_start: 1.0
epsilon_finish: 0.05

runner: "episode"
# runner: "parallel"
# buffer_size: 10
# batch_size_run: 10
# batch_size: 10

env_args:
  joint_rewards: False
  time_limit: 50 # LBF: Max seq_length

obs_agent_id: False
obs_last_action: False
obs_individual_obs: False
# use the Q_Learner to train
mac: "dac"
agent: "rnn_ns"
agent_output_type: "q"
learner: "actor_critic_graph_learner"
standardise_returns: False
double_q: True
critic_type: "ac_gcn_ns" # All weights begin at the same place.

# Networked agents
networked_edges: 2  # maps n_agents: n_edges
networked_rounds: 1  # At each consensus round try this many consensus matrices.
networked_interval: 5 # Try consensus at every networked_interval number of training steps.
networked_policy: True

# Graph agents
pool_type: 'avg' # 'max'

name: "gcna2c"
t_max: 20_050_000
